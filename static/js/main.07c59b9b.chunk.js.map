{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","weatherData","setWeatherData","useEffect","navigator","geolocation","getCurrentPosition","position","getData","a","fetch","coords","latitude","longitude","process","json","parsedWeatherData","error","console","log","className","role","style","alerts","display","description","timezone","class","Math","trunc","current","temp","humidity","wind_speed","weather","main","daily","map","info","key","width","marginLeft","src","alt","min","max","left","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07c59b9b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  const [weatherData, setWeatherData] = useState()\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      const getData = async () => {\r\n        const weatherData = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${position.coords.latitude ? position.coords.latitude : \"43\"}&lon=${position.coords.longitude ? position.coords.longitude : \"-75\"}&exclude={part}&appid=${process.env.REACT_APP_WEATHER_API_KEY}`)\r\n        const parsedWeatherData = await weatherData.json()\r\n        setWeatherData(parsedWeatherData)\r\n      }\r\n      getData()\r\n    }, (error) => {\r\n      console.log(error)\r\n    })\r\n\r\n  }, [])\r\n  return (\r\n    <div className=\"main-div\">\r\n      <div className=\"alert alert-danger\" role=\"alert\" style={weatherData ? (weatherData.alerts ? { display: \"unset\" } : { display: \"none\" }) : { display: \"none\" }}>\r\n        {weatherData ? (weatherData.alerts ? weatherData.alerts[0].description : \"\") : \"\"}\r\n      </div>\r\n      <p className=\"main-heading\">Simple Weather App üå§</p>\r\n      <p className=\"region\" >Region: {weatherData ? weatherData.timezone : <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">Loading...</span>\r\n      </div>}</p>\r\n      <div className=\"current-weather\">\r\n        <p className=\"heading\">Current Weather ‚òÅ</p>\r\n        <div className=\"card\" >\r\n          <ul className=\"list-group list-group-flush\">\r\n            <li className=\"list-group-item placeholder-glow\">Temperature:- {weatherData ? Math.trunc(weatherData.current.temp - 273) : <span class=\"placeholder col-1\"></span>}¬∞C</li>\r\n            <li className=\"list-group-item placeholder-glow\">Humidity:- {weatherData ? weatherData.current.humidity : <span class=\"placeholder col-1\"></span>}%</li>\r\n            <li className=\"list-group-item placeholder-glow\">Wind Speed:- {weatherData ? weatherData.current.wind_speed : <span class=\"placeholder col-1\"></span>}km/h</li>\r\n            <li className=\"list-group-item placeholder-glow\">Weather:- {weatherData ? weatherData.current.weather[0].main : <span class=\"placeholder col-1\"></span>}</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <p className=\"heading\">Daily Weather ‚òÄ</p>\r\n      <div className=\"daily-weather\">\r\n        {weatherData ? weatherData.daily.map((info, key) => {\r\n          return (\r\n            <div className=\"card\" style={{ width: \"18rem\", marginLeft: \"5rem\" }} key={key}>\r\n              <img src={`https://source.unsplash.com/1500x700/?weather,${info.weather[0].description}`} class=\"card-img-top\" alt=\"...\" />\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Day-{key + 1}</h5>\r\n              </div>\r\n              <ul className=\"list-group list-group-flush\">\r\n                <li className=\"list-group-item\">Min Temp:- {Math.trunc(info.temp.min - 273)}¬∞C</li>\r\n                <li className=\"list-group-item\">Max Temp:- {Math.trunc(info.temp.max - 273)}¬∞C</li>\r\n                <li className=\"list-group-item\">Humidity:- {info.humidity}%</li>\r\n                <li className=\"list-group-item\">Wind Speed:- {info.wind_speed} km/h</li>\r\n                <li className=\"list-group-item\">Weather:- {info.weather[0].main}</li>\r\n              </ul>\r\n            </div>\r\n          )\r\n        }) : <div class=\"spinner-border text-primary\" role=\"status\" style={{ position: 'relative', left: '100%', marginLeft: '16rem' }}>\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </div>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}